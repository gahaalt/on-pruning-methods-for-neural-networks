Global:
    repeat: 1
    queue: null
    slack: true
    slack_config:
        token: xoxb-2033382586257-2033399501089-JtVfALz4f1mpnUET5vgiW7O1
        say: f"{exp.Name:>40} - {exp.ACC if 'ACC' in exp else '??':<20}"
        channel_final: cool-runner
        channel_short: cool-runner-short

# DEFAULT CONFIG
Name: null
Repeat: 1
Run: solve modules.pruning.main
YamlLog: parse f"{_dir}/{Name}/id{RND_IDX}/rep{REP}.yaml"

precision: 16
_dir: data/temp/2021.29.05
tensorboard_log: parse f"{_dir}/{Name}/id{RND_IDX}/rep{REP}"

epochs: 80
steps_per_epoch: 2000
initial_epoch: 0

_save_epochs: []
_save_dir: parse f"{_dir}/{Name}/id{RND_IDX}/rep{REP}"
save_model: "parse {ep: f'{_save_dir}/ep{ep}.h5'  for ep in _save_epochs}"
save_optim: "parse {ep: f'{_save_dir}/ep{ep}.pkl' for ep in _save_epochs}"

_optim: solve tensorflow.keras.optimizers
_args: [0.2, 160000, 0.0008]
_optim_kwds:
    learning_rate: solve tensorflow.keras.experimental.CosineDecay(*_args)
    momentum: 0.9
    nesterov: true
optimizer: solve _optim.SGD(**_optim_kwds)

_: solve modules.pruning.pruning_utils.globally_enable_pruning()

model: WRN16-8
dataset: cifar10
loss_fn: crossentropy

pruning: null
pruning_config:
    sparsity: 0.0
    structure: false

Desc: WRN16-8 Cosine Decay with with cosine pruning, test many sparsities
---
epochs: 40

_args: [0.2, 78000, 0.0008]
_optim_kwds:
    learning_rate: solve tensorflow.keras.experimental.CosineDecay(*_args)
    momentum: 0.9
    nesterov: true

_kwds:
    decay_steps: 78000
    alpha: parse [0.75, 0.5, 0.2, 0.1, 0.05, 0.025, 0.0125][REP]
    interval: 100
    verbose_interval: 2000
callback: solve callbacks.callbacks.CosinePruningCallback(**_kwds)

Name: parse f"WRN16-8-CosineDecay-cosine-pruning-de{_kwds.alpha}-80k"
Repeat: 7
---
epochs: 80

_args: [0.2, 156000, 0.0008]
_optim_kwds:
    learning_rate: solve tensorflow.keras.experimental.CosineDecay(*_args)
    momentum: 0.9
    nesterov: true

_kwds:
    decay_steps: 158000
    alpha: parse [0.75, 0.5, 0.2, 0.1, 0.05, 0.025, 0.0125][REP]
    interval: 100
    verbose_interval: 2000
callback: solve callbacks.callbacks.CosinePruningCallback(**_kwds)

Name: parse f"WRN16-8-CosineDecay-cosine-pruning-de{_kwds.alpha}-80k"
Repeat: 7
